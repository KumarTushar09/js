import gensim.downloader as api
import openai

print("Loading Model...")
model = api.load("word2vec-google-news-300")
print("Model Loaded")

openai.api_key = " "

def generate_similar_words(seed_word, top_n=5):
    try:
        similar = model.most_similar(seed_word, topn=top_n)
        return [word for word, score in similar]
    except KeyError:
        return []

def generate_paragraph_using_gpt(seed_word, similar_words):
    word_str = ', '.join(similar_words)
    prompt = (
        f"Write a simple and creative sentence using '{seed_word}', "
        f"and use these related words as starting point: {word_str}. "
        f"Write a paragraph that is concise and clear."
    )

    response = openai.chat.completions.create(
        model="gpt-4o-mini",
        messages=[
            {"role": "system", "content": "You are a creative writer"},
            {"role": "user", "content": prompt}
        ],
        temperature=0.8,
        max_tokens=150
    )
    return response.choices[0].message.content.strip()

def main():
    seed_word = input("Enter seed word: ").lower().strip()
    similar_words = generate_similar_words(seed_word)

    if not similar_words:
        print("Similar words are not present.")
        return

    print(f"Similar words: {similar_words}")
    paragraph = generate_paragraph_using_gpt(seed_word, similar_words)
    print("Generated paragraph:")
    print(paragraph)

if __name__ == "__main__":
    main()